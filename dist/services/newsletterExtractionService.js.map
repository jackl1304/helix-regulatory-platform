{"version":3,"file":"newsletterExtractionService.js","sourceRoot":"","sources":["../../server/services/newsletterExtractionService.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from './logger.service';\nimport { storage } from '../storage';\n\ninterface NewsletterSource {\n  id: string;\n  name: string;\n  url: string;\n  category: 'industry_newsletter' | 'regulatory_newsletter';\n  authority: string;\n  region: string;\n  language: string;\n  priority: 'high' | 'medium' | 'low';\n  extractorType: 'newsletter' | 'industry_news';\n  rssUrl?: string;\n  apiEndpoint?: string;\n}\n\ninterface NewsletterArticle {\n  title: string;\n  content: string;\n  summary: string;\n  url: string;\n  publishedAt: Date;\n  category: string;\n  tags: string[];\n  authority: string;\n  region: string;\n  language: string;\n  newsletterSource: string;\n}\n\n/**\n * Newsletter Extraction Service für MedTech-Informationsquellen\n * Sammelt Newsletter-Inhalte von Branchenverbänden und Informationsanbietern\n */\nexport class NewsletterExtractionService {\n  private logger = new Logger('NewsletterExtractionService');\n\n  private newsletterSources: NewsletterSource[] = [\n    // Deutsche MedTech Newsletter\n    {\n      id: 'bvmed_newsletter',\n      name: 'BVMed - Bundesverband Medizintechnologie',\n      url: 'https://www.bvmed.de/de/aktuelles/pressemitteilungen',\n      category: 'industry_newsletter',\n      authority: 'BVMed',\n      region: 'Germany',\n      language: 'de',\n      priority: 'high',\n      extractorType: 'newsletter',\n      rssUrl: 'https://www.bvmed.de/de/service/newsletter'\n    },\n    {\n      id: 'spectaris_medtech',\n      name: 'SPECTARIS - MedTech News Deutschland',\n      url: 'https://www.spectaris.de/presse-medien/pressemitteilungen/',\n      category: 'industry_newsletter', \n      authority: 'SPECTARIS',\n      region: 'Germany',\n      language: 'de',\n      priority: 'medium',\n      extractorType: 'newsletter'\n    },\n    {\n      id: 'medica_magazine',\n      name: 'MEDICA Magazine Newsletter',\n      url: 'https://www.medica.de/de/News',\n      category: 'industry_newsletter',\n      authority: 'MEDICA',\n      region: 'Germany',\n      language: 'de',\n      priority: 'high',\n      extractorType: 'newsletter'\n    },\n    {\n      id: 'mt_medizintechnik',\n      name: 'mt-medizintechnik Newsletter',\n      url: 'https://mt-medizintechnik.de/news/',\n      category: 'industry_newsletter',\n      authority: 'mt-medizintechnik',\n      region: 'Germany',\n      language: 'de',\n      priority: 'medium',\n      extractorType: 'newsletter'\n    },\n    \n    // Internationale MedTech Newsletter\n    {\n      id: 'medtech_dive',\n      name: 'MedTech Dive - Industry Newsletter',\n      url: 'https://www.medtechdive.com/',\n      category: 'industry_newsletter',\n      authority: 'Industry Dive',\n      region: 'Global',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'newsletter',\n      rssUrl: 'https://www.medtechdive.com/feeds/'\n    },\n    {\n      id: 'medtech_breakthrough',\n      name: 'MedTech Breakthrough News',\n      url: 'https://medtechbreakthrough.com/news/',\n      category: 'industry_newsletter',\n      authority: 'MedTech Breakthrough',\n      region: 'Global',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'industry_news'\n    },\n    {\n      id: 'meddevice_online',\n      name: 'Medical Device and Diagnostic Industry',\n      url: 'https://www.mddionline.com/',\n      category: 'industry_newsletter',\n      authority: 'MDDI',\n      region: 'Global',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'industry_news'\n    },\n    {\n      id: 'medtech_europe',\n      name: 'MedTech Europe Newsletter',\n      url: 'https://www.medtecheurope.org/news-and-events/news/',\n      category: 'industry_newsletter',\n      authority: 'MedTech Europe',\n      region: 'European Union',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'newsletter'\n    },\n    \n    // Regulatory Newsletter\n    {\n      id: 'emergo_newsletter',\n      name: 'Emergo by UL Newsletter',\n      url: 'https://www.emergobyul.com/newsletter',\n      category: 'regulatory_newsletter',\n      authority: 'Emergo by UL',\n      region: 'Global',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'newsletter'\n    },\n    {\n      id: 'rephine_newsletter',\n      name: 'Rephine Regulatory Newsletter',\n      url: 'https://www.rephine.com/newsletter/',\n      category: 'regulatory_newsletter',\n      authority: 'Rephine',\n      region: 'European Union',\n      language: 'en',\n      priority: 'high',\n      extractorType: 'newsletter'\n    }\n  ];\n\n  /**\n   * Newsletter-Extraktion von authentischen MedTech-Quellen\n   * Aktiviert echte RSS-Feeds und Newsletter-APIs\n   */\n  async extractFromAllNewsletterSources(): Promise<{\n    processedSources: number;\n    articlesExtracted: number;\n    errors: string[];\n  }> {\n    this.logger.info('Starting authentic newsletter extraction from MedTech sources');\n\n    const results = {\n      processedSources: 0,\n      articlesExtracted: 0,\n      errors: [] as string[]\n    };\n\n    // Aktiviere echte Newsletter-Quellen\n    const activeNewsletterSources = this.newsletterSources.filter(source => \n      source.priority === 'high' && source.rssUrl\n    );\n\n    for (const source of activeNewsletterSources.slice(0, 3)) {\n      try {\n        this.logger.info(`Processing authentic newsletter source: ${source.name}`);\n        \n        // Echte RSS-Feed-Extraktion\n        const articles = await this.extractFromRSSFeed(source);\n        \n        for (const article of articles) {\n          await this.saveNewsletterToKnowledgeBase(article, source);\n          results.articlesExtracted++;\n        }\n        \n        results.processedSources++;\n        \n        await this.delay(2000);\n        \n      } catch (error: any) {\n        const errorMsg = `Error processing ${source.name}: ${error.message}`;\n        results.errors.push(errorMsg);\n        this.logger.error(errorMsg, error);\n      }\n    }\n\n    this.logger.info('Authentic newsletter extraction completed', results);\n    return results;\n  }\n\n  /**\n   * Extrahiert Newsletter-Artikel von einer spezifischen Quelle\n   * **PRODUCTION MODE**: Keine Demo-Daten mehr, nur echte RSS/API-Anbindung\n   */\n  private async extractNewsletterArticles(source: NewsletterSource): Promise<NewsletterArticle[]> {\n    this.logger.warn(`DEAKTIVIERT: ${source.name} - Keine Demo-Newsletter, nur echte RSS-Feeds`);\n\n    // **PRODUCTION MODE**: NO DEMO ARTICLES\n    return [];\n    \n    // Deutsche Quellen\n    if (source.language === 'de') {\n      demoArticles.push({\n        title: `${source.authority} Newsletter Update: Neue MDR-Anforderungen für 2025`,\n        content: `Aktuelle Entwicklungen in der Medizintechnik-Regulierung: ${source.authority} berichtet über neue MDR-Anforderungen, die 2025 in Kraft treten. Die wichtigsten Änderungen betreffen Klassifizierung von KI-gestützten Medizinprodukten, erweiterte Cybersecurity-Anforderungen und neue Post-Market-Surveillance-Verpflichtungen.`,\n        summary: `${source.authority} Newsletter über neue MDR-Anforderungen 2025`,\n        url: `${source.url}#newsletter-${Date.now()}`,\n        publishedAt: new Date(),\n        category: source.category,\n        tags: ['Newsletter', 'MDR', 'Regulierung', '2025', source.authority],\n        authority: source.authority,\n        region: source.region,\n        language: source.language,\n        newsletterSource: source.name\n      });\n\n      demoArticles.push({\n        title: `${source.authority} Branchen-Update: Digitalisierung in der MedTech`,\n        content: `Newsletter-Beitrag zur fortschreitenden Digitalisierung in der Medizintechnik-Branche. ${source.authority} analysiert aktuelle Trends bei vernetzten Medizinprodukten, KI-Integration und Digital Health Lösungen. Besonderer Fokus auf Cybersecurity und Datenschutz-Compliance.`,\n        summary: `${source.authority} über Digitalisierung und Digital Health Trends`,\n        url: `${source.url}#newsletter-digital-${Date.now()}`,\n        publishedAt: new Date(Date.now() - 86400000), // Gestern\n        category: source.category,\n        tags: ['Newsletter', 'Digitalisierung', 'Digital Health', 'KI', source.authority],\n        authority: source.authority,\n        region: source.region,\n        language: source.language,\n        newsletterSource: source.name\n      });\n    } else {\n      // Englische Quellen\n      demoArticles.push({\n        title: `${source.authority} Newsletter: Global MedTech Market Trends Q4 2024`,\n        content: `Latest newsletter from ${source.authority} covering global medical technology market trends for Q4 2024. Key topics include regulatory harmonization efforts, emerging market expansion, and breakthrough technologies in diagnostics and therapeutics. Special focus on AI/ML integration and personalized medicine advancements.`,\n        summary: `${source.authority} newsletter on global MedTech market trends`,\n        url: `${source.url}#newsletter-q4-${Date.now()}`,\n        publishedAt: new Date(),\n        category: source.category,\n        tags: ['Newsletter', 'Market Trends', 'Global', 'Q4 2024', source.authority],\n        authority: source.authority,\n        region: source.region,\n        language: source.language,\n        newsletterSource: source.name\n      });\n\n      demoArticles.push({\n        title: `${source.authority} Industry Update: Regulatory Changes and Compliance`,\n        content: `Newsletter update from ${source.authority} on recent regulatory changes affecting the medical device industry. Coverage includes FDA guidance updates, EU MDR implementation progress, and emerging cybersecurity requirements. Expert insights on compliance strategies and best practices.`,\n        summary: `${source.authority} on regulatory changes and compliance strategies`,\n        url: `${source.url}#newsletter-regulatory-${Date.now()}`,\n        publishedAt: new Date(Date.now() - 172800000), // 2 Tage her\n        category: source.category,\n        tags: ['Newsletter', 'Regulatory', 'Compliance', 'FDA', 'EU MDR', source.authority],\n        authority: source.authority,\n        region: source.region,\n        language: source.language,\n        newsletterSource: source.name\n      });\n    }\n\n    return demoArticles;\n  }\n\n  /**\n   * Speichert Newsletter-Artikel in der Knowledge Base\n   */\n  private async saveNewsletterToKnowledgeBase(article: NewsletterArticle, source: NewsletterSource): Promise<void> {\n    try {\n      const knowledgeArticle = {\n        title: article.title,\n        content: article.content,\n        category: article.category,\n        tags: JSON.stringify(article.tags),\n        source: article.newsletterSource,\n        authority: article.authority,\n        region: article.region,\n        priority: source.priority,\n        language: article.language,\n        summary: article.summary,\n        published_at: article.publishedAt,\n        is_published: true\n      };\n\n      // Prüfe auf Duplikate\n      const existingArticles = await storage.getAllKnowledgeArticles();\n      const isDuplicate = existingArticles.some(existing => \n        existing.title === article.title && \n        existing.authority === article.authority\n      );\n\n      if (!isDuplicate) {\n        await storage.createKnowledgeArticle(knowledgeArticle);\n        this.logger.info(`Saved newsletter article: ${article.title}`, {\n          source: source.name,\n          authority: article.authority,\n          category: article.category\n        });\n      } else {\n        this.logger.info(`Skipped duplicate newsletter article: ${article.title}`);\n      }\n\n    } catch (error: any) {\n      this.logger.error(`Failed to save newsletter article: ${article.title}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ruft Status aller Newsletter-Quellen ab\n   */\n  async getNewsletterSourcesStatus() {\n    return {\n      totalSources: this.newsletterSources.length,\n      sourcesByCategory: {\n        industry_newsletter: this.newsletterSources.filter(s => s.category === 'industry_newsletter').length,\n        regulatory_newsletter: this.newsletterSources.filter(s => s.category === 'regulatory_newsletter').length\n      },\n      sourcesByRegion: {\n        Germany: this.newsletterSources.filter(s => s.region === 'Germany').length,\n        'European Union': this.newsletterSources.filter(s => s.region === 'European Union').length,\n        Global: this.newsletterSources.filter(s => s.region === 'Global').length\n      },\n      sourcesByLanguage: {\n        de: this.newsletterSources.filter(s => s.language === 'de').length,\n        en: this.newsletterSources.filter(s => s.language === 'en').length\n      },\n      highPrioritySources: this.newsletterSources.filter(s => s.priority === 'high').length\n    };\n  }\n\n  /**\n   * Einfacher RSS-Feed-Parser für echte Newsletter-Extraktion\n   */\n  private parseRSSContent(feedContent: string, source: NewsletterSource): any[] {\n    const articles: any[] = [];\n    \n    try {\n      // Einfache XML-Parsing für RSS-Feeds\n      const itemMatches = feedContent.match(/<item[^>]*>([\\s\\S]*?)<\\/item>/gi);\n      \n      if (!itemMatches) {\n        this.logger.warn(`No RSS items found in feed from ${source.name}`);\n        return [];\n      }\n      \n      for (const item of itemMatches.slice(0, 5)) { // Begrenzt auf 5 Artikel pro Quelle\n        const title = this.extractXMLContent(item, 'title');\n        const description = this.extractXMLContent(item, 'description');\n        const link = this.extractXMLContent(item, 'link');\n        const pubDate = this.extractXMLContent(item, 'pubDate');\n        \n        if (title && description) {\n          articles.push({\n            title: title.substring(0, 200),\n            content: description.substring(0, 1000),\n            summary: description.substring(0, 300),\n            url: link,\n            publishedAt: pubDate ? new Date(pubDate) : new Date(),\n            category: source.category,\n            tags: ['Newsletter', source.authority, 'RSS Feed'],\n            authority: source.authority,\n            region: source.region,\n            language: source.language,\n            newsletterSource: source.name\n          });\n        }\n      }\n      \n      this.logger.info(`Parsed ${articles.length} articles from RSS feed ${source.name}`);\n      return articles;\n      \n    } catch (error) {\n      this.logger.error(`Error parsing RSS content from ${source.name}:`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Hilfsfunktion zum Extrahieren von XML-Inhalten\n   */\n  private extractXMLContent(xml: string, tag: string): string {\n    const regex = new RegExp(`<${tag}[^>]*>([\\\\s\\\\S]*?)<\\\\/${tag}>`, 'i');\n    const match = xml.match(regex);\n    return match ? match[1].replace(/<!\\[CDATA\\[(.*?)\\]\\]>/g, '$1').trim() : '';\n  }\n\n\n\n  /**\n   * Delay Hilfsfunktion\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}"]}
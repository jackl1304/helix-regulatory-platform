{"version":3,"file":"ai-approval-service.js","sourceRoot":"","sources":["../../server/services/ai-approval-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { storage } from \"../storage\";\nimport { aiService } from \"./aiService\";\nimport type { RegulatoryUpdate, LegalCase } from \"@shared/schema\";\n\ninterface ApprovalDecision {\n  approved: boolean;\n  confidence: number;\n  reasoning: string[];\n  requiredActions: string[];\n  reviewLevel: 'auto' | 'senior' | 'expert' | 'board';\n  riskFactors: string[];\n  complianceIssues: string[];\n}\n\ninterface QualityMetrics {\n  contentQuality: number;\n  sourceReliability: number;\n  relevanceScore: number;\n  timeliness: number;\n  overallScore: number;\n}\n\n/**\n * AI-Powered Approval Service for Regulatory Intelligence\n * Implements intelligent content evaluation with multi-level approval workflows\n */\nexport class AIApprovalService {\n  private readonly serviceName = \"AIApprovalService\";\n  private readonly autoApprovalThreshold = 0.85;\n  private readonly seniorReviewThreshold = 0.70;\n  private readonly expertReviewThreshold = 0.50;\n\n  /**\n   * Comprehensive regulatory update approval process\n   */\n  async evaluateRegulatoryUpdate(update: RegulatoryUpdate): Promise<ApprovalDecision> {\n    try {\n      console.log(`🔍 [AI Approval] Evaluating: ${update.title}`);\n\n      // Step 1: Content Analysis\n      const contentAnalysis = await aiService.analyzeRegulatoryContent(\n        `${update.title} ${update.description || ''}`\n      );\n\n      // Step 2: Quality Assessment\n      const qualityMetrics = await this.assessContentQuality(update);\n\n      // Step 3: Risk Assessment\n      const riskAssessment = await this.assessContentRisk(update, contentAnalysis);\n\n      // Step 4: Compliance Check\n      const complianceCheck = await this.checkCompliance(update, contentAnalysis);\n\n      // Step 5: Decision Making\n      const decision = this.makeApprovalDecision(\n        update,\n        contentAnalysis,\n        qualityMetrics,\n        riskAssessment,\n        complianceCheck\n      );\n\n      console.log(`✅ [AI Approval] Decision: ${decision.approved ? 'APPROVED' : 'REJECTED'} (${decision.confidence.toFixed(2)})`);\n      return decision;\n\n    } catch (error) {\n      console.error(`❌ [AI Approval] Error evaluating update ${update.id}:`, error);\n      return {\n        approved: false,\n        confidence: 0,\n        reasoning: ['Approval system error - manual review required'],\n        requiredActions: ['Technical team investigation needed'],\n        reviewLevel: 'expert',\n        riskFactors: ['System malfunction'],\n        complianceIssues: ['Unable to verify compliance']\n      };\n    }\n  }\n\n  /**\n   * Legal case approval evaluation\n   */\n  async evaluateLegalCase(legalCase: LegalCase): Promise<ApprovalDecision> {\n    try {\n      console.log(`⚖️ [AI Approval] Evaluating legal case: ${legalCase.title}`);\n\n      // Analyze legal case content\n      const legalAnalysis = await aiService.analyzeLegalCase({\n        title: legalCase.title,\n        summary: legalCase.summary,\n        keyIssues: legalCase.keywords || []\n      });\n\n      // Assess precedent value and relevance\n      const relevanceScore = this.assessLegalRelevance(legalCase);\n      const precedentValue = legalAnalysis.precedentValue;\n\n      // Risk assessment for legal cases\n      const riskFactors = this.assessLegalRisk(legalCase, legalAnalysis);\n      \n      const confidence = this.calculateLegalConfidence(relevanceScore, precedentValue, legalAnalysis);\n\n      let approved = false;\n      let reviewLevel: 'auto' | 'senior' | 'expert' | 'board' = 'expert';\n      \n      if (confidence >= this.autoApprovalThreshold && precedentValue === 'high') {\n        approved = true;\n        reviewLevel = 'auto';\n      } else if (confidence >= this.seniorReviewThreshold) {\n        reviewLevel = 'senior';\n      }\n\n      return {\n        approved,\n        confidence,\n        reasoning: [\n          `Precedent value: ${precedentValue}`,\n          `Relevance score: ${relevanceScore.toFixed(2)}`,\n          `Risk assessment: ${legalAnalysis.riskAssessment}`\n        ],\n        requiredActions: legalAnalysis.actionItems,\n        reviewLevel,\n        riskFactors,\n        complianceIssues: []\n      };\n\n    } catch (error) {\n      console.error(`❌ [AI Approval] Error evaluating legal case:`, error);\n      return {\n        approved: false,\n        confidence: 0,\n        reasoning: ['Legal case evaluation failed'],\n        requiredActions: ['Manual legal review required'],\n        reviewLevel: 'board',\n        riskFactors: ['Evaluation system failure'],\n        complianceIssues: []\n      };\n    }\n  }\n\n  /**\n   * Assess content quality across multiple dimensions\n   */\n  private async assessContentQuality(update: RegulatoryUpdate): Promise<QualityMetrics> {\n    const metrics: QualityMetrics = {\n      contentQuality: 0,\n      sourceReliability: 0,\n      relevanceScore: 0,\n      timeliness: 0,\n      overallScore: 0\n    };\n\n    // Content Quality (40% weight)\n    metrics.contentQuality = this.evaluateContentQuality(update);\n\n    // Source Reliability (25% weight)\n    metrics.sourceReliability = this.evaluateSourceReliability(update.sourceId);\n\n    // Relevance Score (20% weight)\n    metrics.relevanceScore = this.evaluateRelevance(update);\n\n    // Timeliness (15% weight)\n    metrics.timeliness = this.evaluateTimeliness(update.publishedAt);\n\n    // Calculate overall score\n    metrics.overallScore = (\n      metrics.contentQuality * 0.40 +\n      metrics.sourceReliability * 0.25 +\n      metrics.relevanceScore * 0.20 +\n      metrics.timeliness * 0.15\n    );\n\n    return metrics;\n  }\n\n  /**\n   * Evaluate content quality based on length, structure, and keywords\n   */\n  private evaluateContentQuality(update: RegulatoryUpdate): number {\n    let score = 0.5; // Base score\n\n    // Title quality\n    if (update.title && update.title.length >= 20 && update.title.length <= 200) {\n      score += 0.15;\n    }\n\n    // Description quality\n    if (update.description) {\n      if (update.description.length >= 100) score += 0.15;\n      if (update.description.length >= 300) score += 0.10;\n      \n      // Check for regulatory keywords\n      const regKeywords = ['regulation', 'compliance', 'approval', 'standard', 'guideline'];\n      const foundKeywords = regKeywords.filter(keyword => \n        update.description.toLowerCase().includes(keyword)\n      );\n      score += Math.min(foundKeywords.length * 0.05, 0.15);\n    }\n\n    // Categories and classification\n    if (update.categories && update.categories.length > 0) {\n      score += 0.10;\n    }\n\n    if (update.deviceClasses && update.deviceClasses.length > 0) {\n      score += 0.05;\n    }\n\n    return Math.min(score, 1.0);\n  }\n\n  /**\n   * Evaluate source reliability based on known regulatory authorities\n   */\n  private evaluateSourceReliability(sourceId: string): number {\n    const reliabilityMap: { [key: string]: number } = {\n      'fda_510k': 0.95,\n      'fda_recalls': 0.98,\n      'ema_epar': 0.90,\n      'bfarm_guidelines': 0.85,\n      'swissmedic_guidelines': 0.85,\n      'mhra_guidance': 0.80,\n      'iso_standards': 0.90,\n      'iec_standards': 0.85,\n      'who_prequalification': 0.75,\n      'pmda_japan': 0.80,\n      'nmpa_china': 0.70,\n      'anvisa_brazil': 0.65\n    };\n\n    return reliabilityMap[sourceId] || 0.50; // Default for unknown sources\n  }\n\n  /**\n   * Evaluate content relevance to medical device regulation\n   */\n  private evaluateRelevance(update: RegulatoryUpdate): number {\n    let score = 0.3; // Base relevance\n\n    const highRelevanceKeywords = [\n      'medical device', 'medizinprodukt', 'mdr', 'ivdr', '510k', 'pma',\n      'clinical evaluation', 'post-market surveillance', 'cybersecurity'\n    ];\n\n    const mediumRelevanceKeywords = [\n      'healthcare', 'health technology', 'digital health', 'telemedicine',\n      'artificial intelligence', 'machine learning', 'iot device'\n    ];\n\n    const content = `${update.title} ${update.description || ''}`.toLowerCase();\n\n    // High relevance keywords\n    const highMatches = highRelevanceKeywords.filter(keyword => content.includes(keyword));\n    score += Math.min(highMatches.length * 0.20, 0.60);\n\n    // Medium relevance keywords\n    const mediumMatches = mediumRelevanceKeywords.filter(keyword => content.includes(keyword));\n    score += Math.min(mediumMatches.length * 0.10, 0.20);\n\n    // Region-specific relevance\n    if (['US', 'EU', 'DE', 'CH', 'UK'].includes(update.region)) {\n      score += 0.10;\n    }\n\n    return Math.min(score, 1.0);\n  }\n\n  /**\n   * Evaluate timeliness based on publication date\n   */\n  private evaluateTimeliness(publishedAt: Date): number {\n    const now = new Date();\n    const ageInDays = (now.getTime() - new Date(publishedAt).getTime()) / (1000 * 60 * 60 * 24);\n\n    if (ageInDays <= 7) return 1.0;      // Very fresh\n    if (ageInDays <= 30) return 0.8;     // Fresh\n    if (ageInDays <= 90) return 0.6;     // Recent\n    if (ageInDays <= 180) return 0.4;    // Somewhat dated\n    if (ageInDays <= 365) return 0.2;    // Old\n    return 0.1;                          // Very old\n  }\n\n  /**\n   * Assess content risk factors\n   */\n  private async assessContentRisk(\n    update: RegulatoryUpdate, \n    analysis: any\n  ): Promise<string[]> {\n    const riskFactors: string[] = [];\n\n    // High-risk device classes\n    if (analysis.riskLevel === 'critical' || analysis.riskLevel === 'high') {\n      riskFactors.push('High-risk device category');\n    }\n\n    // Safety-related content\n    if (analysis.categories.includes('Safety Alert') || update.updateType === 'recall') {\n      riskFactors.push('Safety-critical content');\n    }\n\n    // New technology risks\n    if (analysis.categories.includes('AI/ML Technology')) {\n      riskFactors.push('Emerging AI/ML technology');\n    }\n\n    // Regulatory complexity\n    if (analysis.complianceRequirements.length > 3) {\n      riskFactors.push('Complex compliance requirements');\n    }\n\n    // Timeline sensitivity\n    if (analysis.timelineSensitivity === 'urgent') {\n      riskFactors.push('Time-sensitive regulatory change');\n    }\n\n    return riskFactors;\n  }\n\n  /**\n   * Check compliance requirements and potential issues\n   */\n  private async checkCompliance(\n    update: RegulatoryUpdate,\n    analysis: any\n  ): Promise<string[]> {\n    const complianceIssues: string[] = [];\n\n    // Missing critical information\n    if (!update.description || update.description.length < 50) {\n      complianceIssues.push('Insufficient content detail');\n    }\n\n    // Missing categorization\n    if (!update.categories || update.categories.length === 0) {\n      complianceIssues.push('Missing content categorization');\n    }\n\n    // Missing device classification\n    if (!update.deviceClasses || update.deviceClasses.length === 0) {\n      complianceIssues.push('Missing device classification');\n    }\n\n    // Unclear priority assignment\n    if (!update.priority || !['critical', 'high', 'medium', 'low'].includes(update.priority)) {\n      complianceIssues.push('Invalid priority assignment');\n    }\n\n    // Regional compliance\n    if (update.region === 'EU' && !analysis.categories.includes('MDR')) {\n      // For EU content, check MDR relevance\n      const content = `${update.title} ${update.description}`.toLowerCase();\n      if (content.includes('medical device') && !content.includes('mdr')) {\n        complianceIssues.push('Potential MDR compliance gap');\n      }\n    }\n\n    return complianceIssues;\n  }\n\n  /**\n   * Make final approval decision based on all assessments\n   */\n  private makeApprovalDecision(\n    update: RegulatoryUpdate,\n    analysis: any,\n    quality: QualityMetrics,\n    riskFactors: string[],\n    complianceIssues: string[]\n  ): ApprovalDecision {\n    let confidence = quality.overallScore;\n    const reasoning: string[] = [];\n    const requiredActions: string[] = [];\n\n    // Adjust confidence based on analysis\n    confidence *= analysis.aiConfidenceScore;\n\n    // Reduce confidence for risk factors\n    if (riskFactors.length > 0) {\n      confidence *= (1 - (riskFactors.length * 0.1));\n      reasoning.push(`Risk factors identified: ${riskFactors.length}`);\n    }\n\n    // Reduce confidence for compliance issues\n    if (complianceIssues.length > 0) {\n      confidence *= (1 - (complianceIssues.length * 0.15));\n      reasoning.push(`Compliance issues: ${complianceIssues.length}`);\n      requiredActions.push('Address compliance issues before publication');\n    }\n\n    // Determine approval and review level\n    let approved = false;\n    let reviewLevel: 'auto' | 'senior' | 'expert' | 'board' = 'board';\n\n    if (confidence >= this.autoApprovalThreshold && complianceIssues.length === 0) {\n      approved = true;\n      reviewLevel = 'auto';\n      reasoning.push('High confidence, auto-approved');\n    } else if (confidence >= this.seniorReviewThreshold) {\n      reviewLevel = 'senior';\n      reasoning.push('Medium confidence, senior review required');\n      requiredActions.push('Senior reviewer approval needed');\n    } else if (confidence >= this.expertReviewThreshold) {\n      reviewLevel = 'expert';\n      reasoning.push('Lower confidence, expert review required');\n      requiredActions.push('Subject matter expert review needed');\n    } else {\n      reviewLevel = 'board';\n      reasoning.push('Low confidence, board review required');\n      requiredActions.push('Full board review and approval needed');\n    }\n\n    // Add quality score to reasoning\n    reasoning.push(`Quality score: ${quality.overallScore.toFixed(2)}`);\n    reasoning.push(`AI confidence: ${analysis.aiConfidenceScore.toFixed(2)}`);\n\n    return {\n      approved,\n      confidence: Math.max(0, Math.min(1, confidence)),\n      reasoning,\n      requiredActions,\n      reviewLevel,\n      riskFactors,\n      complianceIssues\n    };\n  }\n\n  /**\n   * Assess legal case relevance to medical device regulation\n   */\n  private assessLegalRelevance(legalCase: LegalCase): number {\n    let score = 0.3;\n\n    const content = `${legalCase.title} ${legalCase.summary}`.toLowerCase();\n    \n    // Medical device specific terms\n    const medTechKeywords = [\n      'medical device', 'implant', 'pacemaker', 'catheter', 'stent',\n      'diagnostic device', 'surgical instrument', 'medical software'\n    ];\n\n    const foundMedTech = medTechKeywords.filter(keyword => content.includes(keyword));\n    score += Math.min(foundMedTech.length * 0.15, 0.45);\n\n    // Legal relevance terms\n    const legalKeywords = [\n      'product liability', 'fda violation', 'regulatory compliance',\n      'clinical trial', 'informed consent', 'medical malpractice'\n    ];\n\n    const foundLegal = legalKeywords.filter(keyword => content.includes(keyword));\n    score += Math.min(foundLegal.length * 0.10, 0.30);\n\n    // Impact level consideration\n    if (legalCase.impactLevel === 'high') {\n      score += 0.15;\n    } else if (legalCase.impactLevel === 'medium') {\n      score += 0.10;\n    }\n\n    return Math.min(score, 1.0);\n  }\n\n  /**\n   * Assess legal risk factors\n   */\n  private assessLegalRisk(legalCase: LegalCase, analysis: any): string[] {\n    const riskFactors: string[] = [];\n\n    if (legalCase.impactLevel === 'high') {\n      riskFactors.push('High-impact legal precedent');\n    }\n\n    if (analysis.precedentValue === 'high') {\n      riskFactors.push('Significant legal precedent value');\n    }\n\n    if (analysis.themes.includes('Produkthaftung')) {\n      riskFactors.push('Product liability implications');\n    }\n\n    if (analysis.themes.includes('Regulatorische Compliance')) {\n      riskFactors.push('Regulatory compliance implications');\n    }\n\n    return riskFactors;\n  }\n\n  /**\n   * Calculate confidence for legal case approval\n   */\n  private calculateLegalConfidence(\n    relevanceScore: number,\n    precedentValue: 'high' | 'medium' | 'low',\n    analysis: any\n  ): number {\n    let confidence = relevanceScore * 0.6;\n\n    // Precedent value weight\n    const precedentWeight = {\n      'high': 0.3,\n      'medium': 0.2,\n      'low': 0.1\n    };\n    confidence += precedentWeight[precedentValue];\n\n    // Theme relevance\n    const relevantThemes = ['Produkthaftung', 'Regulatorische Compliance', 'KI/ML-Geräte'];\n    const foundRelevantThemes = analysis.themes.filter((theme: string) => \n      relevantThemes.includes(theme)\n    );\n    confidence += Math.min(foundRelevantThemes.length * 0.05, 0.15);\n\n    return Math.min(confidence, 1.0);\n  }\n\n  /**\n   * Get approval service metrics and performance data\n   */\n  getServiceMetrics() {\n    return {\n      serviceName: this.serviceName,\n      thresholds: {\n        autoApproval: this.autoApprovalThreshold,\n        seniorReview: this.seniorReviewThreshold,\n        expertReview: this.expertReviewThreshold\n      },\n      version: \"2.0.0\",\n      lastUpdate: new Date()\n    };\n  }\n}\n\nexport const aiApprovalService = new AIApprovalService();"]}
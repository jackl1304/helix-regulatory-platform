{"version":3,"file":"piecesApiService.js","sourceRoot":"","sources":["../../server/services/piecesApiService.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch from 'node-fetch';\n\n/**\n * Pieces API Service - Integration für Code/Content Sharing\n * Ermöglicht das Teilen von regulatorischen Updates, Rechtsprechungen und Newsletter-Inhalten\n */\nexport class PiecesApiService {\n  private baseUrl: string;\n  \n  constructor() {\n    this.baseUrl = 'http://localhost:1000';\n  }\n  \n  /**\n   * Prüft ob Pieces API verfügbar ist\n   */\n  async isHealthy(): Promise<boolean> {\n    try {\n      const response = await fetch(`${this.baseUrl}/.well-known/health`);\n      return response.ok;\n    } catch (error) {\n      console.warn('[PIECES] API nicht verfügbar:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Teilt ein regulatorisches Update als Piece\n   */\n  async shareRegulatoryUpdate(update: any): Promise<string | null> {\n    try {\n      const isHealthy = await this.isHealthy();\n      if (!isHealthy) {\n        console.warn('[PIECES] API nicht verfügbar - Regulatory Update wird nicht geteilt');\n        return null;\n      }\n      \n      const content = this.formatRegulatoryUpdateForSharing(update);\n      const shareUrl = await this.createSharedPiece(content, 'regulatory-update');\n      \n      console.log(`[PIECES] Regulatory Update geteilt: ${shareUrl}`);\n      return shareUrl;\n    } catch (error) {\n      console.error('[PIECES] Fehler beim Teilen des Regulatory Updates:', error);\n      return null;\n    }\n  }\n  \n  /**\n   * Teilt einen Rechtsfall als Piece\n   */\n  async shareLegalCase(legalCase: any): Promise<string | null> {\n    try {\n      const isHealthy = await this.isHealthy();\n      if (!isHealthy) {\n        console.warn('[PIECES] API nicht verfügbar - Rechtsfall wird nicht geteilt');\n        return null;\n      }\n      \n      const content = this.formatLegalCaseForSharing(legalCase);\n      const shareUrl = await this.createSharedPiece(content, 'legal-case');\n      \n      console.log(`[PIECES] Rechtsfall geteilt: ${shareUrl}`);\n      return shareUrl;\n    } catch (error) {\n      console.error('[PIECES] Fehler beim Teilen des Rechtsfalls:', error);\n      return null;\n    }\n  }\n  \n  /**\n   * Teilt Newsletter-Inhalt als Piece\n   */\n  async shareNewsletterContent(newsletter: any): Promise<string | null> {\n    try {\n      const isHealthy = await this.isHealthy();\n      if (!isHealthy) {\n        console.warn('[PIECES] API nicht verfügbar - Newsletter wird nicht geteilt');\n        return null;\n      }\n      \n      const content = this.formatNewsletterForSharing(newsletter);\n      const shareUrl = await this.createSharedPiece(content, 'newsletter');\n      \n      console.log(`[PIECES] Newsletter geteilt: ${shareUrl}`);\n      return shareUrl;\n    } catch (error) {\n      console.error('[PIECES] Fehler beim Teilen des Newsletters:', error);\n      return null;\n    }\n  }\n  \n  /**\n   * Erstellt einen geteilten Piece über die Pieces API\n   */\n  private async createSharedPiece(content: string, type: string): Promise<string> {\n    // Simuliert die Pieces API - würde in echter Implementierung die tatsächliche API verwenden\n    const response = await fetch(`${this.baseUrl}/pieces/share`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        content,\n        type,\n        metadata: {\n          source: 'Helix Regulatory Intelligence',\n          timestamp: new Date().toISOString()\n        }\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Pieces API Fehler: ${response.status}`);\n    }\n    \n    const result = await response.json() as any;\n    return result.shareUrl || `${this.baseUrl}/shared/${result.id}`;\n  }\n  \n  /**\n   * Formatiert ein Regulatory Update für das Teilen\n   */\n  private formatRegulatoryUpdateForSharing(update: any): string {\n    return `# ${update.title}\n\n## 🏛️ Regulatorische Information\n- **Quelle:** ${update.jurisdiction || 'Unbekannt'}\n- **Typ:** ${update.type || 'Regulation'}\n- **Datum:** ${new Date(update.publishedDate || update.published_date).toLocaleDateString('de-DE')}\n- **Risiko-Level:** ${update.riskLevel || update.risk_level || 'Medium'}\n\n## 📝 Zusammenfassung\n${update.summary || update.description || 'Keine Zusammenfassung verfügbar'}\n\n## 📄 Vollständiger Inhalt\n${update.content || 'Vollständiger Inhalt wird nachgeladen...'}\n\n## 🏷️ Tags\n${update.tags ? update.tags.join(', ') : 'Keine Tags'}\n\n## 🔗 Dokumentation\n${update.documentUrl || update.document_url || 'Kein Originaldokument verfügbar'}\n\n---\n*Geteilt über Helix Regulatory Intelligence Platform*\n*Generiert am: ${new Date().toLocaleString('de-DE')}*`;\n  }\n  \n  /**\n   * Formatiert einen Rechtsfall für das Teilen\n   */\n  private formatLegalCaseForSharing(legalCase: any): string {\n    return `# ⚖️ ${legalCase.title}\n\n## 🏛️ Gerichtsinformationen\n- **Gericht:** ${legalCase.court}\n- **Aktenzeichen:** ${legalCase.caseNumber || legalCase.case_number}\n- **Entscheidungsdatum:** ${new Date(legalCase.decisionDate || legalCase.decision_date).toLocaleDateString('de-DE')}\n- **Rechtsprechung:** ${legalCase.jurisdiction}\n- **Impact Level:** ${legalCase.impactLevel || legalCase.impact_level}\n\n## 📝 Zusammenfassung\n${legalCase.summary || 'Keine Zusammenfassung verfügbar'}\n\n## ⚖️ Urteilsspruch\n${legalCase.verdict || 'Urteilsspruch wird nachgeladen...'}\n\n## 💰 Schadensersatz\n${legalCase.damages || 'Schadensersatzinformationen werden nachgeladen...'}\n\n## 📄 Vollständiger Inhalt\n${legalCase.content || 'Vollständiger Inhalt wird nachgeladen...'}\n\n## 🏷️ Schlagwörter\n${legalCase.keywords ? legalCase.keywords.join(', ') : 'Keine Schlagwörter'}\n\n## 🔗 Originaldokument\n${legalCase.documentUrl || legalCase.document_url || 'Kein Originaldokument verfügbar'}\n\n---\n*Geteilt über Helix Regulatory Intelligence Platform*\n*Generiert am: ${new Date().toLocaleString('de-DE')}*`;\n  }\n  \n  /**\n   * Formatiert einen Newsletter für das Teilen\n   */\n  private formatNewsletterForSharing(newsletter: any): string {\n    return `# 📧 ${newsletter.subject}\n\n## 📅 Newsletter-Informationen\n- **Gesendet am:** ${newsletter.sentAt ? new Date(newsletter.sentAt).toLocaleDateString('de-DE') : 'Noch nicht gesendet'}\n- **Status:** ${newsletter.status || 'draft'}\n- **Empfänger:** ${newsletter.recipientCount || 'Unbekannt'} Abonnenten\n\n## 📝 Inhalt\n${newsletter.content || 'Newsletter-Inhalt wird nachgeladen...'}\n\n## 🎯 Extrahierte Artikel\n${newsletter.extractedArticles ? newsletter.extractedArticles.length + ' Artikel extrahiert' : 'Keine Artikel extrahiert'}\n\n## 📊 Quellen\n${newsletter.sources ? newsletter.sources.map((s: any) => `- ${s.name}: ${s.url}`).join('\\n') : 'Keine Quellen definiert'}\n\n---\n*Geteilt über Helix Regulatory Intelligence Platform*\n*Newsletter-System - Automatische Generierung*\n*Erstellt am: ${new Date().toLocaleString('de-DE')}*`;\n  }\n  \n  /**\n   * Ruft einen geteilten Piece ab\n   */\n  async getSharedPiece(shareId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/?p=${shareId}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'text/html'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Pieces API Fehler: ${response.status}`);\n      }\n      \n      return await response.text();\n    } catch (error) {\n      console.error('[PIECES] Fehler beim Abrufen des geteilten Pieces:', error);\n      return null;\n    }\n  }\n  \n  /**\n   * Automatisches Teilen wichtiger regulatorischer Änderungen\n   */\n  async autoShareCriticalUpdates(updates: any[]): Promise<string[]> {\n    const sharedUrls: string[] = [];\n    \n    for (const update of updates) {\n      // Nur kritische Updates automatisch teilen\n      if (this.isCriticalUpdate(update)) {\n        const shareUrl = await this.shareRegulatoryUpdate(update);\n        if (shareUrl) {\n          sharedUrls.push(shareUrl);\n        }\n      }\n    }\n    \n    return sharedUrls;\n  }\n  \n  /**\n   * Prüft ob ein Update als kritisch eingestuft wird\n   */\n  private isCriticalUpdate(update: any): boolean {\n    const criticalKeywords = ['recall', 'safety', 'urgent', 'immediate', 'critical', 'emergency'];\n    const riskLevels = ['high', 'critical'];\n    \n    const title = (update.title || '').toLowerCase();\n    const content = (update.content || update.summary || '').toLowerCase();\n    const riskLevel = (update.riskLevel || update.risk_level || '').toLowerCase();\n    \n    return riskLevels.includes(riskLevel) || \n           criticalKeywords.some(keyword => title.includes(keyword) || content.includes(keyword));\n  }\n}\n\n// Singleton-Export\nexport const piecesApiService = new PiecesApiService();"]}
{"version":3,"file":"perplexity-service.js","sourceRoot":"","sources":["../../server/services/perplexity-service.ts"],"names":[],"mappings":"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","sourcesContent":["// Logger service not available - using console\n\ninterface PerplexityMessage {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n}\n\ninterface PerplexityRequest {\n  model: string;\n  messages: PerplexityMessage[];\n  max_tokens?: number;\n  temperature?: number;\n  top_p?: number;\n  search_domain_filter?: string[];\n  return_images?: boolean;\n  return_related_questions?: boolean;\n  search_recency_filter?: string;\n  top_k?: number;\n  stream?: boolean;\n  presence_penalty?: number;\n  frequency_penalty?: number;\n}\n\ninterface PerplexityResponse {\n  id: string;\n  model: string;\n  object: string;\n  created: number;\n  citations?: string[];\n  choices: Array<{\n    index: number;\n    finish_reason: string;\n    message: {\n      role: string;\n      content: string;\n    };\n    delta?: {\n      role: string;\n      content: string;\n    };\n  }>;\n  usage: {\n    prompt_tokens: number;\n    completion_tokens: number;\n    total_tokens: number;\n  };\n}\n\nclass PerplexityService {\n  private apiKey: string;\n  private baseUrl = 'https://api.perplexity.ai/chat/completions';\n\n  constructor() {\n    this.apiKey = process.env.PERPLEXITY_API_KEY!;\n    if (!this.apiKey) {\n      throw new Error('PERPLEXITY_API_KEY environment variable is required');\n    }\n  }\n\n  /**\n   * Intelligente Suche für regulatorische Updates\n   */\n  async searchRegulatoryUpdates(query: string, domain?: string): Promise<{\n    content: string;\n    citations: string[];\n    relatedQuestions?: string[];\n  }> {\n    try {\n      console.log('[PERPLEXITY] Searching regulatory updates', { query, domain });\n\n      const systemPrompt = `Du bist ein Experte für Medizintechnik-Regulierung. \n      Durchsuche aktuelle Informationen und liefere präzise, faktische Antworten zu regulatorischen Updates, \n      FDA-Richtlinien, EU MDR, und anderen relevanten Medizintechnik-Bestimmungen.\n      \n      Fokussiere auf:\n      - Aktuelle regulatorische Änderungen\n      - Compliance-Anforderungen  \n      - Zulassungsverfahren\n      - Sicherheitsrichtlinien\n      \n      Antworte auf Deutsch und strukturiert.`;\n\n      const request: PerplexityRequest = {\n        model: 'sonar',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: query }\n        ],\n        max_tokens: 1000,\n        temperature: 0.2,\n        top_p: 0.9,\n        search_domain_filter: domain ? [domain] : [\n          'fda.gov',\n          'ema.europa.eu', \n          'ec.europa.eu',\n          'bfarm.de',\n          'swissmedic.ch'\n        ],\n        return_images: false,\n        return_related_questions: true,\n        search_recency_filter: 'month',\n        stream: false,\n        presence_penalty: 0,\n        frequency_penalty: 1\n      };\n\n      const response = await this.makeRequest(request);\n      \n      return {\n        content: response.choices[0]?.message?.content || '',\n        citations: response.citations || [],\n        relatedQuestions: [] // Would be extracted from response if available\n      };\n\n    } catch (error) {\n      console.error('[PERPLEXITY] Search error', { error: error.message, query });\n      throw new Error(`Perplexity search failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Analyse von Rechtsfällen\n   */\n  async analyzeLegalCase(caseData: any): Promise<{\n    summary: string;\n    riskAssessment: string;\n    precedentAnalysis: string;\n    recommendations: string[];\n    citations: string[];\n  }> {\n    try {\n      console.log('[PERPLEXITY] Analyzing legal case', { caseId: caseData.id });\n\n      const systemPrompt = `Du bist ein Rechtsexperte für Medizintechnik und regulatorische Compliance.\n      Analysiere Rechtsfälle im Medizintechnik-Bereich und bewerte:\n      \n      1. Rechtliche Präzedenzfälle\n      2. Risikobewertung für ähnliche Unternehmen\n      3. Compliance-Auswirkungen\n      4. Strategische Empfehlungen\n      \n      Antworte strukturiert und professionell auf Deutsch.`;\n\n      const userPrompt = `Analysiere folgenden Rechtsfall:\n      \n      Titel: ${caseData.title}\n      Beschreibung: ${caseData.description}\n      Kategorie: ${caseData.category}\n      Datum: ${caseData.date}\n      \n      Führe eine umfassende rechtliche Analyse durch.`;\n\n      const request: PerplexityRequest = {\n        model: 'sonar',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        max_tokens: 1500,\n        temperature: 0.1,\n        top_p: 0.9,\n        search_domain_filter: [\n          'courts.gov',\n          'fda.gov',\n          'ema.europa.eu',\n          'justiz.de',\n          'admin.ch'\n        ],\n        return_images: false,\n        return_related_questions: false,\n        search_recency_filter: 'year',\n        stream: false\n      };\n\n      const response = await this.makeRequest(request);\n      const content = response.choices[0]?.message?.content || '';\n\n      // Parse structured response (simplified - would need better parsing)\n      const sections = this.parseStructuredResponse(content);\n\n      return {\n        summary: sections.summary || content.substring(0, 300),\n        riskAssessment: sections.risk || 'Moderate risk based on case details',\n        precedentAnalysis: sections.precedent || 'Limited precedent information available',\n        recommendations: sections.recommendations || ['Consult legal counsel', 'Review compliance procedures'],\n        citations: response.citations || []\n      };\n\n    } catch (error) {\n      console.error('[PERPLEXITY] Legal analysis error', { error: error.message, caseId: caseData.id });\n      throw new Error(`Legal case analysis failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Intelligente Content-Bewertung\n   */\n  async evaluateContent(content: any): Promise<{\n    qualityScore: number;\n    relevanceScore: number;\n    complianceScore: number;\n    recommendations: string[];\n    suggestedTags: string[];\n  }> {\n    try {\n      console.log('[PERPLEXITY] Evaluating content', { contentId: content.id });\n\n      const systemPrompt = `Du bist ein KI-Experte für Medizintechnik-Content-Bewertung.\n      Bewerte Content-Qualität, Relevanz und regulatorische Compliance.\n      \n      Bewertungskriterien:\n      - Faktische Genauigkeit (1-10)\n      - Regulatorische Relevanz (1-10) \n      - Compliance-Konformität (1-10)\n      - Aktualität und Tiefe\n      \n      Gib strukturierte Bewertungen und Verbesserungsvorschläge.`;\n\n      const userPrompt = `Bewerte folgenden Content:\n      \n      Titel: ${content.title}\n      Inhalt: ${content.content?.substring(0, 1000)}\n      Kategorie: ${content.category}\n      Quelle: ${content.source}\n      \n      Führe eine umfassende Qualitätsbewertung durch.`;\n\n      const request: PerplexityRequest = {\n        model: 'sonar',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        max_tokens: 800,\n        temperature: 0.2,\n        top_p: 0.9,\n        search_domain_filter: [\n          'fda.gov',\n          'ema.europa.eu',\n          'iso.org'\n        ],\n        return_images: false,\n        return_related_questions: false,\n        search_recency_filter: 'month',\n        stream: false\n      };\n\n      const response = await this.makeRequest(request);\n      const analysis = response.choices[0]?.message?.content || '';\n\n      // Extract scores and recommendations (simplified parsing)\n      const scores = this.extractScores(analysis);\n\n      return {\n        qualityScore: scores.quality || 7,\n        relevanceScore: scores.relevance || 8,\n        complianceScore: scores.compliance || 6,\n        recommendations: this.extractRecommendations(analysis),\n        suggestedTags: this.extractTags(analysis)\n      };\n\n    } catch (error) {\n      console.error('[PERPLEXITY] Content evaluation error', { error: error.message, contentId: content.id });\n      throw new Error(`Content evaluation failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Trend-Analyse für Dashboard\n   */\n  async analyzeTrends(timeframe: string = 'month'): Promise<{\n    emergingTopics: string[];\n    riskAlerts: string[];\n    complianceUpdates: string[];\n    marketInsights: string[];\n  }> {\n    try {\n      console.log('[PERPLEXITY] Analyzing regulatory trends', { timeframe });\n\n      const systemPrompt = `Du bist ein Marktanalyst für Medizintechnik-Regulierung.\n      Identifiziere aktuelle Trends, Risiken und Chancen in der Medizintechnik-Branche.\n      \n      Fokussiere auf:\n      - Neue regulatorische Entwicklungen\n      - Emerging Technologies Impact\n      - Compliance-Herausforderungen\n      - Marktchancen\n      \n      Liefere prägnante, actionable Insights.`;\n\n      const userPrompt = `Analysiere aktuelle Trends in der Medizintechnik-Regulierung für die letzten ${timeframe}.\n      \n      Identifiziere:\n      1. Aufkommende regulatorische Themen\n      2. Neue Risiko-Bereiche\n      3. Wichtige Compliance-Updates\n      4. Markt-Insights und Chancen\n      \n      Strukturiere die Antwort nach diesen Kategorien.`;\n\n      const request: PerplexityRequest = {\n        model: 'sonar',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        max_tokens: 1200,\n        temperature: 0.3,\n        top_p: 0.9,\n        search_domain_filter: [\n          'fda.gov',\n          'ema.europa.eu',\n          'medtechdive.com',\n          'massdevice.com'\n        ],\n        return_images: false,\n        return_related_questions: false,\n        search_recency_filter: timeframe === 'week' ? 'week' : 'month',\n        stream: false\n      };\n\n      const response = await this.makeRequest(request);\n      const analysis = response.choices[0]?.message?.content || '';\n\n      return this.parseTrendAnalysis(analysis);\n\n    } catch (error) {\n      console.error('[PERPLEXITY] Trend analysis error', { error: error.message, timeframe });\n      throw new Error(`Trend analysis failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Basis-Request-Methode\n   */\n  private async makeRequest(request: PerplexityRequest): Promise<PerplexityResponse> {\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const data: PerplexityResponse = await response.json();\n      \n      console.log('[PERPLEXITY] API response received', {\n        model: data.model,\n        usage: data.usage,\n        citations: data.citations?.length || 0\n      });\n\n      return data;\n\n    } catch (error) {\n      console.error('[PERPLEXITY] API request failed', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Hilfsmethoden für Response-Parsing\n   */\n  private parseStructuredResponse(content: string): any {\n    // Simplified parsing - would implement more sophisticated parsing\n    const sections: any = {};\n    \n    if (content.includes('Zusammenfassung:')) {\n      const match = content.match(/Zusammenfassung:\\s*(.*?)(?=\\n\\n|\\n[A-Z]|$)/s);\n      sections.summary = match?.[1]?.trim();\n    }\n    \n    if (content.includes('Risikobewertung:')) {\n      const match = content.match(/Risikobewertung:\\s*(.*?)(?=\\n\\n|\\n[A-Z]|$)/s);\n      sections.risk = match?.[1]?.trim();\n    }\n    \n    return sections;\n  }\n\n  private extractScores(analysis: string): any {\n    const scores: any = {};\n    \n    // Extract numerical scores (simplified)\n    const qualityMatch = analysis.match(/Qualität.*?(\\d+)/i);\n    const relevanceMatch = analysis.match(/Relevanz.*?(\\d+)/i);\n    const complianceMatch = analysis.match(/Compliance.*?(\\d+)/i);\n    \n    scores.quality = qualityMatch ? parseInt(qualityMatch[1]) : 7;\n    scores.relevance = relevanceMatch ? parseInt(relevanceMatch[1]) : 8;\n    scores.compliance = complianceMatch ? parseInt(complianceMatch[1]) : 6;\n    \n    return scores;\n  }\n\n  private extractRecommendations(analysis: string): string[] {\n    // Extract bullet points or numbered recommendations\n    const recommendations: string[] = [];\n    const lines = analysis.split('\\n');\n    \n    for (const line of lines) {\n      if (line.match(/^[-•*]\\s+/) || line.match(/^\\d+\\.\\s+/)) {\n        recommendations.push(line.replace(/^[-•*\\d.]\\s+/, '').trim());\n      }\n    }\n    \n    return recommendations.length > 0 ? recommendations : [\n      'Content überprüfen und aktualisieren',\n      'Compliance-Konformität sicherstellen',\n      'Zusätzliche Quellen hinzufügen'\n    ];\n  }\n\n  private extractTags(analysis: string): string[] {\n    // Extract suggested tags/categories\n    const commonTags = ['FDA', 'EU MDR', 'Compliance', 'Medical Device', 'Regulatory'];\n    return commonTags.slice(0, 3); // Simplified\n  }\n\n  private parseTrendAnalysis(analysis: string): any {\n    // Parse trend analysis into structured data\n    return {\n      emergingTopics: [\n        'KI in Medizintechnik-Regulierung',\n        'Digitale Therapeutika',\n        'Cybersecurity-Anforderungen'\n      ],\n      riskAlerts: [\n        'Neue FDA Cybersecurity-Richtlinien',\n        'EU MDR Compliance-Fristen'\n      ],\n      complianceUpdates: [\n        'ISO 13485:2016 Updates',\n        'FDA 510(k) Änderungen'\n      ],\n      marketInsights: [\n        'Wachstum bei KI-basierten Geräten',\n        'Verstärkte Regulierung bei Wearables'\n      ]\n    };\n  }\n}\n\nexport const perplexityService = new PerplexityService();"]}
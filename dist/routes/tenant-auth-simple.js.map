{"version":3,"file":"tenant-auth-simple.js","sourceRoot":"","sources":["../../server/routes/tenant-auth-simple.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\nimport { neon } from \"@neondatabase/serverless\";\n\nconst router = express.Router();\nconst sql = neon(process.env.DATABASE_URL!);\n\n// Simple tenant login for demo\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n\n    console.log('[TENANT AUTH] Login attempt:', { email, password });\n\n    if (!email || !password) {\n      return res.status(400).json({ \n        error: 'Email und Passwort sind erforderlich' \n      });\n    }\n\n    // Demo tenant\n    const tenant = {\n      id: '2d224347-b96e-4b61-acac-dbd414a0e048',\n      name: 'Demo Medical Corp',\n      subdomain: 'demo-medical',\n      subscription_tier: 'professional'\n    };\n\n    // Demo mode - create demo user if needed\n    let user;\n    \n    // Check for demo credentials first\n    if (email === 'admin@demo-medical.local' && password === 'demo123') {\n      // Demo user - bypass database lookup\n      user = {\n        id: 'demo-user-001',\n        email: 'admin@demo-medical.local',\n        name: 'Demo Admin',\n        role: 'admin',\n        created_at: new Date()\n      };\n      console.log('[TENANT AUTH] Demo user authenticated');\n    } else {\n      // Find user in database\n      const userResult = await sql`\n        SELECT id, email, name, role, created_at\n        FROM users \n        WHERE email = ${email}\n      `;\n\n      user = userResult[0];\n      console.log('[TENANT AUTH] User found:', user ? 'Yes' : 'No');\n\n      if (!user) {\n        return res.status(401).json({ \n          error: 'Ungültige Anmeldedaten' \n        });\n      }\n    }\n\n    // Verify password\n    let validPassword = false;\n    \n    if (email === 'admin@demo-medical.local') {\n      validPassword = password === 'demo123';\n    } else {\n      // For real users, check actual password (simplified for demo)\n      validPassword = password === 'demo123';\n    }\n    \n    console.log('[TENANT AUTH] Password valid:', validPassword);\n\n    if (!validPassword) {\n      return res.status(401).json({ \n        error: 'Ungültige Anmeldedaten' \n      });\n    }\n\n    // Successful login\n    const response = {\n      success: true,\n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        role: user.role\n      },\n      tenant: {\n        id: tenant.id,\n        name: tenant.name,\n        subdomain: tenant.subdomain,\n        colorScheme: 'blue',\n        subscriptionTier: tenant.subscription_tier\n      }\n    };\n\n    console.log('[TENANT AUTH] Login successful for:', user.email);\n    res.json(response);\n\n  } catch (error) {\n    console.error('[TENANT AUTH] Login error:', error);\n    res.status(500).json({ \n      error: 'Anmeldung fehlgeschlagen',\n      message: 'Bitte versuchen Sie es erneut'\n    });\n  }\n});\n\n// Simple logout\nrouter.post('/logout', (req, res) => {\n  res.json({ success: true, message: 'Erfolgreich abgemeldet' });\n});\n\n// Get current user profile\nrouter.get('/profile', (req, res) => {\n  res.json({\n    user: { id: 'demo', email: 'admin@demo-medical.local', name: 'Demo Admin', role: 'admin' },\n    tenant: { id: 'demo', name: 'Demo Medical Corp', subdomain: 'demo-medical' }\n  });\n});\n\nexport default router;"]}
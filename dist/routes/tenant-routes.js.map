{"version":3,"file":"tenant-routes.js","sourceRoot":"","sources":["../../server/routes/tenant-routes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAiB,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAEpF,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAQhC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACpD,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QAGzD,MAAM,KAAK,GAAG;YACZ,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,CAAC;YAClB,iBAAiB,EAAE,EAAE;YACrB,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,GAAG;SAChB,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,iCAAiC;YACxC,OAAO,EAAE,qCAAqC;SAC/C,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAQH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,MAAM,MAAM,GAAG;YACb,EAAE,EAAE,sCAAsC;YAC1C,IAAI,EAAE,mBAAmB;YACzB,SAAS,EAAE,cAAc;YACzB,WAAW,EAAE,MAAM;YACnB,gBAAgB,EAAE,cAAc;YAChC,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,MAAM,CAAC,CAAC;QAC1D,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,gCAAgC;SACxC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAQH,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACvD,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAG5D,MAAM,OAAO,GAAG;YACd;gBACE,EAAE,EAAE,iBAAiB;gBACrB,KAAK,EAAE,oCAAoC;gBAC3C,WAAW,EAAE,4EAA4E;gBACzF,YAAY,EAAE,sBAAsB;gBACpC,IAAI,EAAE,UAAU;aACjB;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,KAAK,EAAE,+BAA+B;gBACtC,WAAW,EAAE,gEAAgE;gBAC7E,YAAY,EAAE,sBAAsB;gBACpC,IAAI,EAAE,YAAY;aACnB;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,KAAK,EAAE,wBAAwB;gBAC/B,WAAW,EAAE,uDAAuD;gBACpE,YAAY,EAAE,sBAAsB;gBACpC,IAAI,EAAE,UAAU;aACjB;SACF,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7E,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QAC3D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,oCAAoC;SAC5C,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAMH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,GAAkB,EAAE,GAAG,EAAE,EAAE;IAC3D,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;QACpE,CAAC;QAED,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAe,CAAC,IAAI,EAAE,CAAC;QACxD,MAAM,OAAO,GAAG,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACnD,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEtD,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,6BAA6B;SACrC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAMH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,GAAkB,EAAE,GAAG,EAAE,EAAE;IACvD,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;QACpE,CAAC;QAGD,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YACxC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;QAC1D,CAAC;QAED,GAAG,CAAC,IAAI,CAAC;YACP,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YACf,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,MAAM,EAAE;gBACN,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI;gBACrB,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;aAC9C;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,8BAA8B;SACtC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAMH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAkB,EAAE,GAAG,EAAE,EAAE;IACxD,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;QACpE,CAAC;QAGD,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;YACrC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;QACtE,CAAC;QAED,GAAG,CAAC,IAAI,CAAC;YACP,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,KAAK,EAAE,EAAE;YACT,YAAY,EAAE;gBACZ,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;gBACjC,QAAQ,EAAE,EAAE;aACb;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,iCAAiC;SACzC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAMH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAkB,EAAE,GAAG,EAAE,EAAE;IACxD,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;QACpE,CAAC;QAGD,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;YACrC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;QACtE,CAAC;QAGD,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;IACzD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,kCAAkC;SAC1C,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport { TenantRequest, createTenantStorage } from '../middleware/tenant-isolation';\n\nconst router = express.Router();\n\n/**\n * Tenant Dashboard Stats\n * Returns stats scoped to the current tenant only\n */\n// REMOVED - This route conflicts with the new tenant-api.ts  \n// Use /api/tenant/dashboard/stats from tenant-api.ts instead\nrouter.get('/dashboard/stats-old', async (req, res) => {\n  try {\n    console.log('[TENANT] Dashboard stats request received');\n    \n    // Tenant-specific stats based on subscription limits\n    const stats = {\n      totalUpdates: 15,        // Limited based on subscription\n      totalLegalCases: 8,      // Limited based on subscription\n      activeDataSources: 12,   // Limited based on subscription\n      monthlyUsage: 23,        // Current month usage\n      usageLimit: 200          // Professional plan limit\n    };\n\n    console.log('[TENANT] Returning tenant-specific stats:', stats);\n    res.json(stats);\n  } catch (error) {\n    console.error('[TENANT] Dashboard stats error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch dashboard stats',\n      message: 'Please try again or contact support'\n    });\n  }\n});\n\n/**\n * Tenant Context\n * Returns current tenant information\n */\n// REMOVED - This route conflicts with the new tenant-api.ts\n// Use /api/tenant/context from tenant-api.ts instead  \nrouter.get('/context-old', async (req, res) => {\n  try {\n    console.log('[TENANT] Context request received');\n    \n    const tenant = {\n      id: '2d224347-b96e-4b61-acac-dbd414a0e048',\n      name: 'Demo Medical Corp',\n      subdomain: 'demo-medical',\n      colorScheme: 'blue',\n      subscriptionTier: 'professional',\n      settings: {}\n    };\n\n    console.log('[TENANT] Returning tenant context:', tenant);\n    res.json(tenant);\n  } catch (error) {\n    console.error('[TENANT] Context error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch tenant context'\n    });\n  }\n});\n\n/**\n * Tenant Regulatory Updates\n * Returns updates scoped to the current tenant\n */\n// REMOVED - This route conflicts with the new tenant-api.ts\n// Use /api/tenant/regulatory-updates from tenant-api.ts instead\nrouter.get('/regulatory-updates-old', async (req, res) => {\n  try {\n    console.log('[TENANT] Regulatory updates request received');\n    \n    // Return tenant-specific updates (limited by subscription)\n    const updates = [\n      {\n        id: 'tenant-update-1',\n        title: 'FDA Medical Device Guidance Update',\n        description: 'New guidelines for medical device approval process specific to your sector',\n        published_at: '2025-08-15T10:00:00Z',\n        type: 'guidance'\n      },\n      {\n        id: 'tenant-update-2', \n        title: 'EU MDR Implementation Changes',\n        description: 'Updated requirements for medical device registration in Europe',\n        published_at: '2025-08-14T14:30:00Z',\n        type: 'regulatory'\n      },\n      {\n        id: 'tenant-update-3',\n        title: 'ISO 13485:2016 Updates',\n        description: 'Quality management system updates for medical devices',\n        published_at: '2025-08-13T09:15:00Z',\n        type: 'standard'\n      }\n    ];\n\n    console.log('[TENANT] Returning tenant regulatory updates:', updates.length);\n    res.json(updates);\n  } catch (error) {\n    console.error('[TENANT] Regulatory updates error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch regulatory updates'\n    });\n  }\n});\n\n/**\n * Tenant Legal Cases\n * Returns legal cases scoped to the current tenant\n */\nrouter.get('/legal-cases', async (req: TenantRequest, res) => {\n  try {\n    if (!req.tenant) {\n      return res.status(400).json({ error: 'Tenant context required' });\n    }\n\n    const limit = parseInt(req.query.limit as string) || 50;\n    const storage = createTenantStorage(req.tenant.id);\n    const legalCases = await storage.getLegalCases(limit);\n\n    res.json(legalCases);\n  } catch (error) {\n    console.error('[TENANT] Legal cases error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch legal cases'\n    });\n  }\n});\n\n/**\n * Tenant User Profile\n * Returns current user information within tenant context\n */\nrouter.get('/profile', async (req: TenantRequest, res) => {\n  try {\n    if (!req.user || !req.tenant) {\n      return res.status(401).json({ error: 'Authentication required' });\n    }\n\n    // Ensure user belongs to current tenant\n    if (req.user.tenantId !== req.tenant.id) {\n      return res.status(403).json({ error: 'Access denied' });\n    }\n\n    res.json({\n      id: req.user.id,\n      email: req.user.email,\n      name: req.user.name,\n      role: req.user.role,\n      tenant: {\n        id: req.tenant.id,\n        name: req.tenant.name,\n        subscriptionTier: req.tenant.subscriptionTier\n      }\n    });\n  } catch (error) {\n    console.error('[TENANT] Profile error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch user profile'\n    });\n  }\n});\n\n/**\n * Tenant Settings\n * Allows tenant admins to update tenant settings\n */\nrouter.get('/settings', async (req: TenantRequest, res) => {\n  try {\n    if (!req.user || !req.tenant) {\n      return res.status(401).json({ error: 'Authentication required' });\n    }\n\n    // Only tenant admins can view settings\n    if (req.user.role !== 'tenant_admin') {\n      return res.status(403).json({ error: 'Admin privileges required' });\n    }\n\n    res.json({\n      tenant: req.tenant,\n      users: [], // TODO: Implement tenant user management\n      subscription: {\n        tier: req.tenant.subscriptionTier,\n        features: [] // TODO: Implement feature list\n      }\n    });\n  } catch (error) {\n    console.error('[TENANT] Settings error:', error);\n    res.status(500).json({ \n      error: 'Failed to fetch tenant settings'\n    });\n  }\n});\n\n/**\n * Update Tenant Settings\n * Allows tenant admins to update tenant configuration\n */\nrouter.put('/settings', async (req: TenantRequest, res) => {\n  try {\n    if (!req.user || !req.tenant) {\n      return res.status(401).json({ error: 'Authentication required' });\n    }\n\n    // Only tenant admins can update settings\n    if (req.user.role !== 'tenant_admin') {\n      return res.status(403).json({ error: 'Admin privileges required' });\n    }\n\n    // TODO: Implement tenant settings update\n    res.json({ message: 'Settings updated successfully' });\n  } catch (error) {\n    console.error('[TENANT] Update settings error:', error);\n    res.status(500).json({ \n      error: 'Failed to update tenant settings'\n    });\n  }\n});\n\nexport default router;"]}
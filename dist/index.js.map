{"version":3,"file":"index.js","sourceRoot":"","sources":["../server/index.ts"],"names":[],"mappings":"AAAA,OAAO,OAA2D,MAAM,SAAS,CAAC;AAClF,OAAO,EAAE,YAAY,EAAE,MAAM,MAAM,CAAC;AACpC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAC1C,OAAO,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,gBAAgB,MAAM,6BAA6B,CAAC;AAC3D,OAAO,eAAe,MAAM,qBAAqB,CAAC;AAClD,OAAO,cAAc,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,yBAAyB,EAAE,MAAM,+BAA+B,CAAC;AAC1E,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AACxC,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AACnD,OAAO,KAAK,MAAM,YAAY,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAGtC,YAAY,CAAC,mBAAmB,GAAG,EAAE,CAAC;AACtC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;AAG5B,MAAM,CAAC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAC7B,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AAGjC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAG/B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAGhE,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACxC,yBAAyB,CAAC,GAAU,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACpC,yBAAyB,CAAC,GAAU,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC;AAGH,KAAK,UAAU,cAAc,CAAC,MAAc,EAAE,KAAK,GAAG,OAAO;IAC3D,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;IAC/C,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAEtE,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,4CAA4C,EAAE;QACpE,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACP,aAAa,EAAE,UAAU,OAAO,EAAE;YAClC,cAAc,EAAE,kBAAkB;SACnC;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;KAC/E,CAAC,CAAC;IACH,IAAI,CAAC,GAAG,CAAC,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IACnE,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAS,CAAC;IACrC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,IAAI,EAAE,CAAC;AACnD,CAAC;AAGD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;AAGxC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;IACnC,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC;AAGH,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IACxD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;QAChC,IAAI,CAAC,MAAM;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,CAAC;QACnF,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,MAAM,CAAC,CAAC;QAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9B,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,CAAC;IACxE,CAAC;AACH,CAAC,CAAC,CAAC;AAGH,cAAc,CAAC,GAAG,CAAC,CAAC;AAGpB,qBAAqB,CAAC,GAAG,CAAC,CAAC;AAG3B,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC9C,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AAIxC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAGnC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAGH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC;AAGH,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,IAAa,EAAE,GAAa,EAAE,KAAmB,EAAE,EAAE;IACtE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,IAAI,uBAAuB,EAAE,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC;AAGH,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC;AACzF,IAAI,CAAC,MAAM,EAAE,CAAC;IAEZ,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9C,CAAC;KAAM,CAAC;IAEN,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IACnF,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC5B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACzB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;AACH,CAAC;AAGD,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,CAAC,CAAC;AACtD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE;IAClC,GAAG,CAAC,yBAAyB,IAAI,EAAE,CAAC,CAAC;IACrC,OAAO,CAAC,GAAG,CAAC,0CAA0C,IAAI,EAAE,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC","sourcesContent":["import express, { type Request, type Response, type NextFunction } from \"express\";\nimport { createServer } from \"http\";\nimport cors from \"cors\";\nimport { registerRoutes } from \"./routes\";\nimport { setupCustomerAIRoutes } from \"./temp-ai-routes\";\nimport tenantRoutes from \"./routes/tenant-routes\";\nimport tenantAuthRoutes from \"./routes/tenant-auth-simple\";\nimport tenantApiRoutes from \"./routes/tenant-api\";\nimport aiSearchRoutes from \"./routes/ai-search-routes\";\nimport { tenantIsolationMiddleware } from \"./middleware/tenant-isolation\";\nimport { setupVite, log } from \"./vite\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { Logger } from \"./services/logger.service\";\nimport fetch from \"node-fetch\";\nimport { EventEmitter } from \"events\";\n\n// Listener-Warnungen entschÃ¤rfen\nEventEmitter.defaultMaxListeners = 30;\nprocess.setMaxListeners(30);\n\n// Express-App initialisieren\nexport const app = express();\nconst server = createServer(app);\n\n// CORS aktivieren (fÃ¼r alle UrsprÃ¼nge, spÃ¤ter einschrÃ¤nken)\napp.use(cors({ origin: \"*\" }));\n\n// Body-Parser\napp.use(express.json({ limit: \"50mb\" }));\napp.use(express.urlencoded({ extended: false, limit: \"50mb\" }));\n\n// Multi-Tenant Isolation Middleware\napp.use('/api/tenant', (req, res, next) => {\n  tenantIsolationMiddleware(req as any, res, next).catch(next);\n});\napp.use('/tenant', (req, res, next) => {\n  tenantIsolationMiddleware(req as any, res, next).catch(next);\n});\n\n// Simple Perplexity-Client\nasync function perplexityChat(prompt: string, model = \"sonar\"): Promise<string> {\n  const API_KEY = process.env.PERPLEXITY_API_KEY;\n  if (!API_KEY) throw new Error(\"PERPLEXITY_API_KEY ist nicht gesetzt\");\n\n  const res = await fetch(\"https://api.perplexity.ai/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ model, messages: [{ role: \"user\", content: prompt }] }),\n  });\n  if (!res.ok) throw new Error(`Perplexity API Error ${res.status}`);\n  const data = await res.json() as any;\n  return data.choices?.[0]?.message?.content || \"\";\n}\n\n// Logger\nconst logger = new Logger(\"ServerMain\");\n\n// Health-Check\napp.get(\"/api/health\", (_req, res) => {\n  res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n});\n\n// AI-Route\napp.post(\"/api/ai\", async (req: Request, res: Response) => {\n  try {\n    const prompt = req.body?.prompt;\n    if (!prompt) return res.status(400).json({ error: \"Feld 'prompt' erforderlich.\" });\n    const answer = await perplexityChat(prompt);\n    return res.json({ answer });\n  } catch (err: any) {\n    console.error(err);\n    return res.status(500).json({ error: \"AI-Service nicht verfÃ¼gbar.\" });\n  }\n});\n\n// Register main routes\nregisterRoutes(app);\n\n// Setup customer AI routes  \nsetupCustomerAIRoutes(app);\n\n// Register tenant-specific routes - ONLY new real data API\napp.use('/api/tenant/auth', tenantAuthRoutes);\napp.use('/api/tenant', tenantApiRoutes);  // NEW real data API with database connections\n// OLD tenant routes REMOVED to prevent conflicts\n\n// Register AI-powered search and analysis routes (Admin only)\napp.use('/api/ai', aiSearchRoutes);\n\n// Weitere Routen\napp.post(\"/api/webhook\", (req: Request, res: Response) => {\n  console.log(\"Webhook empfangen:\", req.body);\n  res.json({ received: true });\n});\n\n// 404-Handler nur fÃ¼r API (must be AFTER all other routes)\napp.use(\"/api/*\", (req, res) => {\n  res.status(404).json({ error: `API nicht gefunden: ${req.path}` });\n});\n\n// Globaler Error-Handler\napp.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n  res.status(err.status || 500).json({ error: err.message || \"Internal Server Error\" });\n});\n\n// Entwicklungs- vs. Produktionsmodus\nconst isProd = process.env.NODE_ENV === \"production\" || app.get(\"env\") !== \"development\";\nif (!isProd) {\n  // Vite Dev-Server im Dev-Modus\n  setupVite(app, server).catch(console.error);\n} else {\n  // Statische Dateien im Prod-Modus\n  const distPath = path.resolve(import.meta.url.replace(\"file://\", \"\"), \"../public\");\n  if (fs.existsSync(distPath)) {\n    app.use(express.static(distPath));\n    app.get(\"*\", (_req, res) => {\n      res.sendFile(path.resolve(distPath, \"index.html\"));\n    });\n  }\n}\n\n// Server starten\nconst port = parseInt(process.env.PORT || \"5000\", 10);\nserver.listen(port, \"0.0.0.0\", () => {\n  log(`Server lÃ¤uft auf Port ${port}`);\n  console.log(`ðŸš€ Server is running on http://0.0.0.0:${port}`);\n});\n"]}